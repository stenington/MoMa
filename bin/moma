#!/usr/bin/perl

use Pod::Usage;
use App::Moma;
use Getopt::Long qw(:config no_auto_abbrev no_getopt_compat prefix=--);
use TryCatch;

my %opts = ();
GetOptions(
  \%opts,
  "help",
  "config",
  "checkconfig",
  "verbose"
);

pod2usage({ 
  -message => "Help statement: ",
  -exitval => 0,
  -verbose => 1, 
}) if $opts{help};

my $app = App::Moma->new();
my $cfg = "~/.moma";
try {
  $app->load_rc( $cfg );
  $app->verbosity(1) if $opts{verbose};
}
catch ($err) {
  pod2usage({
    -message => "No configuration found at $cfg",
    -exitval => 1,
    -verbose => 1,
  });
}

if( $opts{config} ){
  $app->print_config;
}
elsif( $opts{checkconfig} ){
  $app->check_config;
}
else {
  my $monstr = $ARGV[0];
  pod2usage({
    -exitval => 1, 
    -verbose => 0,
  }) unless $monstr;
  try {
    $app->parse_args( $monstr );
  }
  catch ($err) {
    pod2usage({
      -message => "Argument $monstr didn't parse: $err",
      -exitval => 1,
      -verbose => 0,
    });
  }
  $app->run();
}

__END__

=head1 moma : MOnitor MAnager

 _______
|,----__|___
||  |,-----.|   moma - switch monitor sets, nice and easy
|`--||     ||
 ``||`-----`|
  ~~~``| |`` 
      ~~~~~

=head1 SYNOPSIS

moma [--help|--config] [--verbose] monitor_string

  Format:
    (+|-)m[n...](+|-)x[y...]
    +m[n...]      turn on m, n, etc.
    -m[n...]      turn off m, n, etc.

  ...where valid identifiers (m, n, etc.) are defined 
  in your ~/.moma file, or * as defined below. 
  (See --config option for details on identifiers.)

  -*+mn...            turns off all identifiers not explicitly turned on (m, n, etc.).
  +mn... or +m+n...   assumes n to the right of m (not mirroring).

  Examples:
    For a docked laptop with two external monitors, side-by-side
    (l=left, r=right, i=internal):
    -i+lr or -*+lr    dual external monitors
    -l                turn off left monitor
    +i                turn on laptop screen
    +i-*              laptop screen only

  Options:
    help          Displays this help message
    config        Displays the active configuration as above
    checkconfig   Reports discrepancies between your .moma and what
                  seems to be available
    verbose       Prints additional information while running.
                  Overrides the verbosity setting in your .moma.


=head1 OPTIONS

=over 8

=item B<--help>

Print a brief help message and exit.

=item B<--config>

Print the active configuration and exit. This should be defined in ~/.moma similarly to the following:

  +-----------------+
  |  [config]       |
  |  verbosity=1    |
  |                 |
  |  [identifiers]  |
  |  l=VGA-0        |
  |  r=DVI-0        |
  |  i=LVDS         |
  |                 |
  |  [modes]        |
  |  LVDS=1280x1024 |
  +-----------------+

=item B<--checkconfig>

Reports discrepancies between your configuration and what seems to be available. 
This option will detect disconnected ports and invalid modes.

=item B<--verbose>

Tells moma to run verbosely. Outputs information about the underlying calls.

=back

=head1 DESCRIPTION

B<This program> will toggle the desired set of monitors. 

=cut
